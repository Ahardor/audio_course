package note

// noteFrequencies - таблица нот и соотвествующих им частот по октавам.
type noteFrequencies map[Note]FrequencyList

// NoteTable таблица нот с дельтами по октавам.
type NoteTable struct {
	// Ноты с частотами по октавам.
	notes noteFrequencies
	// Минимальные дельты частот по октавам.
	// Используются в качестве погрешности для определения ноты.
	// Берется минимальная разница по октаве = freq(C) - freq(C#/Db) Hz
	deltas [OctavesCount]int
}

// Deltas возвращает погрешность по заданной октаве.
func (nt NoteTable) Deltas(octave int) (int, bool) {
	if octave >= 9 || octave < 0 {
		return -1, false
	}
	return nt.deltas[octave], true
}

// Table возвращает таблицу нот с частотами по октавам.
func (nt NoteTable) Table() noteFrequencies {
	return nt.notes
}

func InitTable() NoteTable {
	nt := NoteTable{
		notes: noteFrequencies{
			NoteC:  {1635, 3270, 6541, 13081, 26163, 52325, 104650, 209300, 418601},
			NoteCd: {1732, 3465, 6930, 13859, 27718, 55437, 110873, 221746, 443492},
			NoteDb: {1732, 3465, 6930, 13859, 27718, 55437, 110873, 221746, 443492},
			NoteD:  {1835, 3671, 7342, 14683, 29366, 58733, 117466, 234932, 469863},
			NoteDd: {1945, 3889, 7778, 15556, 31113, 62225, 124451, 248902, 497803},
			NoteEb: {1945, 3889, 7778, 15556, 31113, 62225, 124451, 248902, 497803},
			NoteE:  {2060, 4120, 8241, 16481, 32963, 65925, 131851, 263702, 527404},
			NoteF:  {2183, 4365, 8731, 17461, 34923, 69846, 139691, 279383, 558765},
			NoteFd: {2312, 4625, 9250, 18500, 36999, 73999, 147998, 295996, 591991},
			NoteGb: {2312, 4625, 9250, 18500, 36999, 73999, 147998, 295996, 591991},
			NoteG:  {2450, 4900, 9800, 19600, 39200, 78399, 156798, 313596, 627193},
			NoteGd: {2596, 5191, 10383, 20765, 41530, 83061, 166122, 332244, 664488},
			NoteAb: {2596, 5191, 10383, 20765, 41530, 83061, 166122, 332244, 664488},
			NoteA:  {2750, 5500, 11000, 22000, 44000, 88000, 176000, 352000, 704000},
			NoteAd: {2914, 5827, 11654, 23308, 46616, 93233, 186466, 372931, 745862},
			NoteBb: {2914, 5827, 11654, 23308, 46616, 93233, 186466, 372931, 745862},
			NoteB:  {3087, 6174, 12347, 24694, 49388, 98777, 197553, 395107, 790213},
		},
	}

	for oct := 0; oct < OctavesCount; oct++ {
		nt.deltas[oct] = int(nt.notes[NoteCd][oct] - nt.notes[NoteC][oct])
	}
	return nt
}
